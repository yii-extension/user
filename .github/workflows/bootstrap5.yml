on:
  - pull_request
  - push

name: bootstrap5

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    env:
      extensions: fileinfo, gd, gettext, intl, pdo, pdo_sqlite

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php:
          - "7.4"
          - "8.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: echo "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer
        run: composer self-update

      - name: Install user-view-bootstrap5
        run: composer require yii-extension/user-view-bootstrap5:@dev --dev --ansi

      - name: Run tests with codeception
        run: |
          php -S 127.0.0.1:8080 -t tests/_data/public > tests/_output/runtime/yii.log 2>&1 &
          vendor/bin/codecept run Unit,Acceptance,Functional --coverage-xml

      - name: Upload coverage to codecov
        if: matrix.os == 'ubuntu-latest' && matrix.php == '7.4'
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: tests/_output/coverage.xml
